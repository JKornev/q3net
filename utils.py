import socket
import hashlib
import q3huff
import defines

# ========================
#   Network

class udp_packet:
    def __init__(self, response):
        self.data = response[0]
        self.host = response[1][0]
        self.port = response[1][1]

class udp_transport:
    def __init__(self, host: str, port: int, timeout: float) -> None:
        self._socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        self._socket.connect((host, port))
        self._socket.settimeout(timeout)
        
    def send(self, data : bytes):
        self._socket.send(data)

    def recv(self, size) -> udp_packet:
        return udp_packet( self._socket.recvfrom(size) )

# ========================
#   Serialization

def int_to_bytes(value: int):
    return value.to_bytes(4, "little", signed=True)

def uint_to_bytes(value: int):
    return value.to_bytes(4, "little", signed=False)

class reader:
    def __init__(self, data) -> None:
        self._reader = q3huff.Reader(data)

    def compression(self, enable):
        self._reader.oob = not enable

    def read_int(self):
        return self._int(4, True)
    
    def read_uint(self):
        return self._int(4, False)

    def read_short(self):
        return self._int(2, True)
    
    def read_ushort(self):
        return self._int(2, False)

    def read_char(self):
        return self._int(1, True)
    
    def read_uchar(self):
        return self._int(1, False)

    def read_string(self):
        return self._reader.read_string()

    def read_bigstring(self):
        return self._reader.read_bigstring()
    
    def read_data(self, size):
        return self._reader.read_data(size)

    def read_bits(self, size):
        return self._reader.read_bits(size)

    def _int(self, size, signed):
        return int.from_bytes(self._reader.read_data(size), "little", signed=signed)
    
    def _read(self, size):
        #TODO: check reading out of buffer or delete it
        pass

# ========================
#   Misc

def connection_sequence(sequence : int) -> bool:
    return not (sequence == defines.NO_CONNECTION_SEQUENCE)

# ========================
#   Pure

baseq3_pak8_pack = (
    5,
    b"\xf0\x5b\x71\x29\x6d\x2e\x0f\x10\xa3\xd0\x5d\x9e\x72\xba\xf7\x1c"\
    b"\x59\x3c\x49\x41",
    "pak8.pk3"
)
osp_pak1_pack = (
    95,
    b"\xcd\x4d\x56\x12\xc0\x79\x25\x72\x7d\xe9\x5f\x30\x54\xdc\x6e\x76"\
    b"\x67\x7f\x88\x9e\x46\x3b\xc6\xe2\xd3\xe2\x9a\x87\x42\x23\xb5\xdb"\
    b"\x24\xca\xda\x6b\x98\x37\xdb\xf8\x75\x76\x9f\xff\x41\xa4\x76\x3b"\
    b"\xe1\x51\xf9\x21\x43\x61\x94\x23\xd7\x51\x1e\x72\x0f\x56\xee\x00"\
    b"\x4d\x66\x47\xf2\x23\x4a\x62\xe4\x5a\xc4\x57\x08\x54\xef\x6d\xd0"\
    b"\x65\x94\xe3\xf5\x18\xa3\xda\xbd\x44\x71\xce\x94\xdc\xc2\x4f\xad"\
    b"\x66\x75\x53\xb2\x2d\xde\x7d\xbe\x55\xba\x57\x73\x40\x13\xd3\xd7"\
    b"\x5c\x9c\x49\x89\xde\xa1\xea\x87\x52\x4d\x3b\x11\x6a\xa6\x22\x05"\
    b"\x3d\xd6\x9f\x85\x18\xeb\x68\x3a\x8d\x56\xc7\xf4\x74\x45\x59\xda"\
    b"\x59\xdf\x25\x71\x75\x36\x6e\xfa\xe8\xc2\xb6\xcb\xd7\x77\x04\xe4"\
    b"\x9e\x37\xa1\xbe\x0c\x12\x8d\x24\xf6\x5a\xca\x54\xf1\x00\x5c\xc2"\
    b"\x61\x2e\x7a\x22\x2e\xf3\x8f\x81\xac\x2b\x71\xa4\x87\xf8\x36\xe6"\
    b"\x59\x2f\xbc\xcb\x9b\x67\x97\x19\x4b\x86\x4b\xc1\xc4\x0e\xba\x8a"\
    b"\x63\xe2\x30\x78\x97\xdc\x6f\x16\xff\xf1\x0b\xe0\xab\x00\x8d\x3b"\
    b"\x68\x0c\x5a\x2b\x65\xc1\xa3\x5d\x70\x11\x94\xc6\x59\x0b\x78\x48"\
    b"\xa1\x0b\xa7\x9d\xc4\x56\x87\xbb\xe1\xf7\x96\xf0\xa7\xbd\xa8\xde"\
    b"\x6e\x41\x2f\xd6\x3f\x41\x34\xfe\x8a\xb7\x18\xc6\x3b\x98\x8b\xf8"\
    b"\x26\x1e\x10\x69\xf7\x5c\xcc\x87\xed\x4a\xf4\x65\xc3\xb4\xf0\xf3"\
    b"\x2e\x87\x47\x83\x2c\x9d\x18\x5f\xed\x13\x5a\x20\x6d\xe7\xe6\xb2"\
    b"\x61\xa7\x86\x70\x22\xc6\xe3\xee\x89\x40\x86\x76\x7c\x78\x02\x5f"\
    b"\x8e\x78\x98\x9d\x0f\x69\x8f\xc8\x33\x9f\xcd\xd1\xf1\x1a\xe9\x5e"\
    b"\xd4\x87\x89\x3b\xfd\xd3\x54\xad\x67\x9c\x3f\x42\x5c\xd3\x15\x21"\
    b"\x1d\xf3\x84\xca\xb7\x94\x74\xfe\x29\x6e\xf0\xe1\x57\x93\x36\x6b"\
    b"\xb3\x53\x2c\x3b\xbd\xc7\x2d\x5a\x9e\x50\xbd\x60",
    "zz-osp-pak1.pk3"
)
osp_pak3_pack = (
    1,
    b"\x4c\x5b\x2a\x31",
    "zz-osp-pak3.pk3"
)
cpma_pak152_pack = (
    565,
    b"\x3d\x02\x95\xa4\x72\x2c\xaa\x7e\xb7\xd8\x7b\x2a\x40\x7d\x3b\xeb"\
    b"\xe7\x41\xd8\x7b\xc3\xf7\x8b\x95\x9e\xa7\x87\xaa\xc8\x74\xea\xd9"\
    b"\xab\x7c\x12\x23\x05\x7e\x6f\xa1\xa9\x15\x2a\xf9\xaf\x17\x96\xda"\
    b"\x37\xf2\x2f\xe1\xbe\xf8\x08\xa3\x2e\x11\xa1\x32\xa8\x88\xc6\xf0"\
    b"\x6c\x93\xd1\xb5\xc7\xcc\xd0\x0f\x93\xb3\x92\x99\x68\xcb\x71\x6d"\
    b"\x22\xda\x29\xdd\x6c\x93\xd1\xb5\x37\x9f\x9e\x54\x20\xa8\xf2\x2e"\
    b"\xae\xfc\x79\x6e\xb7\xb6\x30\xe1\x9f\xab\xa9\x20\x5f\x9a\x44\xab"\
    b"\x4c\x47\xbe\xf6\x76\xd9\xd2\xf1\x63\xe4\xa1\xfd\x5f\xe5\x5d\x5f"\
    b"\x1b\xe2\x31\x48\x31\xed\x59\xb5\x5f\xaf\xd7\x88\x58\x04\xfa\x93"\
    b"\x23\xe2\xa3\x8c\xd0\x45\xe4\xba\x6a\x85\xae\xfd\xb7\x89\xe5\x1a"\
    b"\x9f\xab\xa9\x20\x98\xe3\xd8\xc2\x66\xb6\xf0\xd0\xd7\x02\x45\xf4"\
    b"\x12\xf9\x38\xa5\xdb\xcb\xf8\x56\x68\xba\xac\x8e\xa5\x68\xbe\x7d"\
    b"\x9a\x61\x6e\x45\x4e\x4a\x5c\x53\x90\xf6\xb0\x94\xa8\x51\x2b\xa9"\
    b"\xe0\xa3\xcd\x78\xc0\x84\x17\xe6\xa1\x39\x83\x04\xaf\x88\x9a\x12"\
    b"\xf9\x2c\xa1\xf6\xb9\x5a\x5c\xf4\x03\xe8\x6f\xe5\x8d\x6a\xc7\x65"\
    b"\x79\x02\xfa\xcb\x69\xfc\x6a\xe8\x0b\x88\xbc\x45\x1f\x77\x4f\xd5"\
    b"\xfd\xd1\xc1\x5e\x48\xe1\xe3\x75\xae\x6a\xc1\x42\x53\x17\x12\xcb"\
    b"\x18\xb2\xc6\x2f\x8e\xcb\x7a\x37\xad\x60\x62\xcb\x19\x22\x04\xbb"\
    b"\x69\x64\x94\x63\x76\x92\x3c\x58\x53\x7c\xf0\xfa\xd2\x0e\x88\xbb"\
    b"\xa2\xf9\xed\xfb\x3f\x10\x77\x92\x71\x01\x5e\xab\x7d\x29\x5d\x9c"\
    b"\xeb\x3d\x3f\x1f\x41\x71\x22\x1f\xea\xc0\x9f\xd8\x63\x98\xa9\x87"\
    b"\xe5\xc0\xfc\x5e\xe2\xe6\x6f\x50\xa1\xbf\x9e\x05\xf8\x99\x63\x5c"\
    b"\x73\xdf\x8d\xf6\xc9\xed\xb0\xa7\xfc\x72\x5a\xfe\x36\x4b\x6d\x5c"\
    b"\xa4\xae\xdf\xeb\xd8\x67\x67\x57\xb7\x39\x69\x9b\x48\x4c\x74\x05"\
    b"\x24\x8c\x43\x93\x62\x1a\xe1\x28\xee\xbb\xbf\x0d\x5a\x1d\x95\x8e"\
    b"\x2c\x6c\xe0\xcc\xf8\xd9\xb1\x29\x11\x75\x18\xc3\xc2\xf1\x4e\x4e"\
    b"\xa0\x7a\x54\xf2\x7a\x70\x96\x88\x63\xf1\x25\xb1\xdf\x3d\x8f\x46"\
    b"\x86\x0b\x03\xd3\x89\x5b\xaf\xb7\xf9\xb0\x78\xe9\x17\x3f\xf8\x11"\
    b"\xa4\x5c\x75\xe7\x63\x9d\x33\xec\xec\xab\x90\x7c\x08\x9c\xbb\x4d"\
    b"\x46\x04\xf7\x50\xad\x25\x4d\x6c\xa0\x45\x33\xbe\x20\xb8\x9b\x16"\
    b"\xfa\xef\xc6\x09\x71\x52\x45\x33\x39\x37\xde\x9a\xb1\x62\xb0\x77"\
    b"\xb0\x44\x20\x37\x4b\x68\xc8\xc8\x20\xcc\xbd\x35\xa2\xfa\x89\x2c"\
    b"\x4c\x1c\x31\x83\x9c\xe5\xde\x8f\x7b\x46\x3c\x3c\xe6\xaf\x7e\xf7"\
    b"\xe1\xdb\xf7\x43\x51\x9f\x3b\x61\x5c\x58\x9d\xd9\x64\x81\x13\x73"\
    b"\x7a\xe1\x49\xe2\x67\xb6\x00\x27\x4a\x85\x5f\x25\xf3\x56\x19\xb2"\
    b"\xad\xc2\x80\xc3\xd7\x33\x94\x29\x48\xe9\x35\x2e\xa5\x13\x74\xd4"\
    b"\xb0\xae\x0b\x4d\x5f\x47\x14\x3e\x14\xfb\x5a\xb4\x87\x90\x02\x72"\
    b"\x53\x1e\xb6\xce\x2f\x34\xfa\x2f\x18\x34\x07\x83\x56\x70\x72\x16"\
    b"\x54\x3e\xd4\xba\x15\x71\xa0\x4a\x57\xba\xf6\x77\x92\xf5\x24\x1a"\
    b"\x97\x3c\x28\x48\x9b\x3b\xb2\x40\xea\x38\xe2\x50\x3b\xa3\x62\x0a"\
    b"\xfe\x64\x20\xab\x89\xf5\xde\x46\xfa\xf7\xfd\x16\xfd\x28\x7f\x29"\
    b"\xa3\x0a\x50\xb4\x81\x30\x90\xab\x1f\xd4\x60\xef\xf6\x5d\x25\x97"\
    b"\x36\xa5\xe5\x56\x9e\x7d\xea\x08\xf3\x89\x05\x2f\x25\xfd\xf2\x8e"\
    b"\x1e\x15\x32\x09\x71\x5f\xb0\x62\x15\xd6\x41\xf2\x69\x68\xf2\xc5"\
    b"\x03\xff\xd7\xd0\x11\x1a\x4e\xc7\x78\x86\x11\xbf\x7d\xad\x44\xed"\
    b"\x83\xff\x7b\xc5\xd1\xb4\x59\x49\x6b\x28\x80\x12\xc6\xb2\xc7\xa6"\
    b"\x8e\xf0\x98\xf2\x66\x8c\xf7\x94\xa4\xff\xa7\xa2\xd8\x3d\xd0\x8e"\
    b"\x8a\x26\xf9\xca\xad\x31\x54\x98\x54\x35\xe5\xd5\xb9\x11\x77\x50"\
    b"\xf7\x84\x4a\x5d\xad\x6f\x4a\x35\xf9\xb1\x78\x3e\x66\xbd\x65\xb8"\
    b"\x1b\xd0\xb8\x43\xde\x17\xfa\xe2\x7b\xc9\x72\xe0\x7f\xe3\xd5\x9a"\
    b"\x0a\x60\x96\xaf\xe5\xd7\x31\x7d\x47\xdb\xc3\xbd\x63\x89\x5d\x0d"\
    b"\x8c\x69\xd2\x1e\x34\x7a\xb6\xf9\xb3\x23\xc7\x17\xdd\xe3\x2f\xb9"\
    b"\x56\x40\xb1\xb4\x49\x5a\xd4\x47\xe1\xe3\xf7\x6f\xe8\x5d\xe9\xde"\
    b"\x0f\x72\x05\xdb\xd4\xb4\x63\xe2\x76\x36\xf2\x19\x0e\xfe\x87\xda"\
    b"\xc8\x29\xdf\x37\x35\x32\x83\xb2\x4b\x63\xf1\xf6\x55\xc0\xd5\x4b"\
    b"\xf9\x16\x61\x7a\x03\xb2\x37\xc3\x38\xf9\xb0\x33\x80\x61\xe0\x76"\
    b"\xb9\x66\x6f\x71\x26\x60\xc7\x22\x07\x0b\x66\x6a\x94\x4e\xb8\x9f"\
    b"\x9f\xd3\xab\x05\x71\x9c\x7a\x7a\x58\xf0\xb8\x24\xc3\xd4\x1b\x84"\
    b"\xb2\xc4\xa7\xd8\xcf\xe3\x0c\xe5\xf8\xa6\x5b\xcb\x38\x1e\x99\xd6"\
    b"\xd6\x34\xb9\x95\x8e\x9a\x41\xa5\x78\x8b\x90\x9b\xa4\xbe\x43\x1f"\
    b"\x14\x20\x4c\xf0\x8c\x6e\x42\x4b\x8e\x06\xe4\x3c\xf8\xa6\x5b\xcb"\
    b"\x2d\x38\xfe\x21\x3b\xcb\x24\xe6\x52\x93\x2c\xbe\x71\x5a\x25\x53"\
    b"\x69\xca\x3e\x7a\x07\x48\x32\x71\x1d\x5a\x67\x8a\xa7\x23\xb9\xf4"\
    b"\xbb\x78\x22\x5b\x25\xc4\x0a\xc0\x64\xca\x76\x61\x09\x61\xf7\x82"\
    b"\x5d\xa7\x4e\xce\x9f\xd3\xab\x05\x78\x68\xf7\x9d\xda\x9f\x7b\x17"\
    b"\x78\xe5\x7a\x2f\x32\x8b\x8c\x88\x25\xc4\x0a\xc0\xcb\xd2\x85\xfd"\
    b"\xbe\xb9\x4e\x6b\x0c\x0f\x05\x2e\x9f\xd3\xab\x05\x7c\xfb\x7b\x77"\
    b"\x33\x84\x57\xef\x30\x4d\x4e\xc3\x0d\x9f\x8f\x8c\x6d\xec\x61\xde"\
    b"\xf8\xa6\x5b\xcb\xbc\x63\x2b\x63\xde\x7c\xc1\xec\xbd\xc5\x86\xba"\
    b"\x74\xf9\x9e\xf8\x30\xc6\xd7\x19\x12\x4e\xc7\x69\x4a\x0f\x9b\x38"\
    b"\x63\xdd\xbf\xef\x16\xa9\x56\x58\xce\x57\xed\x53\xf5\x21\x07\xee"\
    b"\x11\x56\xc0\x26\x9f\x5f\x9c\xd1\x74\xf9\x9e\xf8\xdf\x56\x42\x29"\
    b"\xda\x0b\xe3\xf8\x13\x61\xda\x8e\xa7\x79\x8e\x96\x1f\x72\x0d\x82"\
    b"\xf8\xa6\x5b\xcb\x13\x1e\xdd\xaa\x63\x77\xb1\x8e\xa4\x5e\xcf\x21"\
    b"\x9f\xd3\xab\x05\x21\x5c\xf4\x69\xa8\xfc\xf2\x50\xfa\x00\x9d\x96"\
    b"\x80\x88\x16\x5c\xe0\x11\x39\xea\xb9\x66\x6f\x71\x48\x9a\x49\x40"\
    b"\xf7\xde\x89\x2a\xe7\x78\x7d\x22\x9f\xd3\xab\x05\x1f\x66\xf4\x18"\
    b"\xda\x0b\xe3\xf8\x58\x3f\xe0\xc2\x7c\xce\xb1\xd1\x39\xd1\x9b\x15"\
    b"\x03\x16\xc6\xc5\x25\xfe\x15\x58\xa9\xfd\x40\x5c\xfe\x19\x14\x10"\
    b"\x9f\xd3\xab\x05\x68\x62\x98\x20\xe7\x76\x35\xdc\x63\xd1\xb5\xed"\
    b"\xf0\x96\x7d\xb8\x84\xf4\xc1\xda\xb9\x66\x6f\x71\x22\x51\xdd\xc3"\
    b"\xfd\x73\x41\x96\x12\x0a\x09\xb0\x01\x00\x3e\x9e\x46\x05\xc0\xa6"\
    b"\xc5\x3a\xa8\x25\x06\x07\xcd\x9b\x2e\x83\xc4\xe3\x49\x45\x4b\xa4"\
    b"\xdf\x4b\xc8\x04\x76\x36\xf2\x19\x50\x2d\x2c\xe2\x83\x58\xd0\xa0"\
    b"\x5c\x89\xf1\xc5\x9f\xd3\xab\x05\xc3\xfa\x0d\xb4\x82\xfe\x8a\x56"\
    b"\x3a\x33\xfd\x20\x07\xe0\xb7\xd5\x89\xe3\xcd\xe0\xf8\xa6\x5b\xcb"\
    b"\x45\xe0\x30\x7e\x92\xb7\x9b\xb2\xf5\x7f\x03\xca\x78\x8b\x90\x9b"\
    b"\x70\x9b\xda\xd7\xe0\x52\xff\xa2\x4d\x17\x17\x22\xc0\x5b\x87\xd0"\
    b"\x25\x66\xd2\xc0\x7c\x5f\x6c\xa5\xd6\xd1\xf2\x0f\xad\x7d\x82\xfa"\
    b"\xcd\x6b\xd8\xc1\x9f\xd3\xab\x05\x95\xa9\xe6\x61\xc5\x3a\xa8\x25"\
    b"\x12\xc8\x0a\x4e\xc4\xc8\x24\x78\x49\x48\x9f\xfa\x9c\x1d\x81\xfc"\
    b"\x06\x65\x43\x6b\x2a\x31\xd9\x9e\x2d\xda\x47\x67\x9f\xd3\xab\x05"\
    b"\x51\x54\xcb\x0e\xd6\xa0\x8f\x96\xa9\x53\xde\x7b\x52\x83\x1c\x84"\
    b"\x31\xc8\x41\x26\x1d\x67\x45\x6f\x44\x20\x1f\xff\x34\x0f\xdc\x5a"\
    b"\xc2\x96\xd2\xe8\x82\xd0\x01\xe3\xd9\x65\x3c\x33\x23\xd9\x31\xbf"\
    b"\x01\x03\x98\x41\x6f\x09\xee\x6a\x30\x72\xa2\x91\xb9\x66\x6f\x71"\
    b"\x32\xc0\x96\xf4\xd0\x0b\x8b\x23\xf8\x8b\x96\x4a\xce\x34\xad\xb6"\
    b"\x8f\xc2\x4e\xc9\xc3\xf9\x80\x54\x93\x64\x76\x3e\x93\xd1\x83\x7b"\
    b"\xfe\x58\xfa\x96\xb9\x66\x6f\x71\x0d\x17\x13\xa9\xaa\x24\xac\xce"\
    b"\x54\xa3\xd5\xcd\x9f\xd3\xab\x05\x85\x8b\x8b\x5c\xef\xbe\x87\x05"\
    b"\x14\x89\x5f\x8c\x79\xc1\x29\xb1\xf8\xa6\x5b\xcb\x5c\xc0\xd9\x67"\
    b"\x5c\xcb\xa5\xe0\xaf\x67\x62\x67\xd8\x10\x1f\x4e\x1a\xa5\x6e\x4b"\
    b"\x31\xdb\x9d\xd8\x9a\x63\x96\xe8\x67\x38\xb6\x78\x36\xe2\x8c\x16"\
    b"\xdb\xbc\xb4\xce\x33\xb5\x4e\x9d\x8c\xaa\x38\xd1\x03\x69\xb3\x25"\
    b"\x9f\xd3\xab\x05\x14\x49\x1c\x5e\x9b\x76\x39\x6e\x87\x63\x0e\x71"\
    b"\xd7\xf6\xd8\x52\xb9\x66\x6f\x71\xdc\x1a\xb4\xcb\x52\xe2\xe3\x72"\
    b"\xf6\xe4\x30\x65\xc2\x96\xd2\xe8\x8b\x5e\x31\x2e\xc3\xf9\x80\x54"\
    b"\x25\x7b\x79\x1d\x81\xac\x7b\x11\x5d\x28\x81\x81\xb9\x66\x6f\x71"\
    b"\x44\xa4\x5d\xa4\xa0\xb1\xb5\xc0\x63\xed\x01\xaf\xed\x97\xa7\xba"\
    b"\x47\x07\x1a\x13\xe0\xb9\xb7\x57\x9b\xf1\x70\x7e\x25\x73\x0b\x23"\
    b"\x96\xff\xa6\xd1\xd3\xd1\xf9\x44\xed\xd7\x72\x9c\x3e\x5a\xb4\x4d"\
    b"\x27\x58\x38\xd3\x76\xd7\x64\x95\x59\x42\xca\xe6\x9b\x86\x7e\xf7"\
    b"\x90\x78\x48\x45\x90\x7d\xf8\x78\xbc\xf7\x51\x18\x3b\x3a\x1c\x99"\
    b"\xa4\xc3\x18\x80\xfd\x2e\x88\xaf\x5c\xb6\x51\x2c\x3d\x16\x1b\x7d"\
    b"\x7a\x2a\xcb\x4f\x50\x40\x45\xc1\xa9\xd9\x05\x5d\x5b\xa3\x8c\x4e"\
    b"\xc2\x76\xe8\x62\x11\xc3\x87\x5f\x90\x3b\x62\x56\x7a\x2c\x5e\x6f"\
    b"\x16\x6e\xf4\xda\x9d\x5d\x0c\x67\x30\x5f\x02\x00\x65\x2e\xd9\x36"\
    b"\x81\xb4\x99\xa3\x52\xc5\x8b\xe9\xf1\x04\x9d\x29\xd3\x92\x82\xb2"\
    b"\x8c\x9e\x0b\xc4\xac\x7f\xbe\xa7\x67\x4e\x82\xba\x0d\xfa\x21\x54"\
    b"\x27\xcf\x4d\xff\xc7\xbb\x00\x3a\x38\x91\x6f\x94\x1e\x54\x66\xe6"\
    b"\x32\x6e\xd0\x65\xd0\x51\xff\x82\x98\x5b\x7d\xa1\x8c\x9e\x0b\xc4"\
    b"\xcb\x80\xf7\xd1\x30\x5f\x02\x00\x29\xc2\x26\x2e\x2c\x65\x7d\x92"\
    b"\xbb\xb7\x28\x97\x43\x63\xd7\x0f\xed\x44\x93\x27\x66\x46\x0e\x5b"\
    b"\x8f\x54\x21\x37\x44\x0b\x84\x59\xf7\xb7\x70\x12\x1f\xe2\x8e\xda"\
    b"\x4f\xc9\x30\xa8\x9a\xfc\x56\x07\x3f\xfe\x5e\x65\xf9\xe0\x5c\x06"\
    b"\x67\xe9\x31\x73\x0b\x91\xa3\x14\xe4\x2a\xee\x9f\x58\x92\x4f\x85"\
    b"\x0a\x21\x4d\xc8\x97\x94\xf9\xda\xd5\x51\xa3\x90\xca\x87\x41\x26"\
    b"\x34\x8e\x4a\xe2\xf9\x5d\x7e\x21\x4d\x9e\x0f\xfb\x14\xf3\xef\xbe"\
    b"\xf4\x58\xcd\x92\xb5\x68\xed\x93\x2f\x10\xec\xf7\x6b\x8b\x44\x60"\
    b"\x02\x21\x6b\xe7\xfc\x70\xcc\x33\xfa\x11\xb3\x42\x6e\x43\xaf\x24"\
    b"\x83\x04\x33\x63\x94\x66\xa5\xc9\x4a\x26\x38\x65\x18\x58\x50\x44"\
    b"\x6c\xe2\x62\xca\x3a\xa6\x0a\x80\x0a\x35\x64\x25\x51\x5d\xf7\x3a"\
    b"\x83\xe4\x09\x84\xd5\x71\x0d\x7a\xce\xbd\x0f\x82\x66\xbf\xb3\x3d"\
    b"\xd0\xb3\x36\x37\x46\x3e\x7a\xb4\x1b\x9c\xe9\xa8\xe2\xed\x1c\x9b"\
    b"\x45\xd4\x3d\xb4\x1e\xf7\x3f\x7a\x79\xfa\x80\x24\xda\x37\xcd\x98"\
    b"\x16\x20\xdd\x55\xe8\x95\x1b\x67\xc2\x0c\xf6\x08\x19\x99\x24\x61"\
    b"\xeb\x69\xca\xed\xa1\xa2\xd8\xf3\x7d\xf2\x1a\xe9\xbc\xc1\x8b\x6d"\
    b"\x1a\xac\xa8\x8b\x6c\xbb\xef\x0b\xc1\xeb\x8f\x1d\xfb\x32\xde\x2d"\
    b"\x53\x2e\xf3\xf0\x55\xdc\x89\x7c\x0f\x86\x44\x43\x4e\x74\x4c\xf5"\
    b"\x4e\x49\x4a\xfd\x81\xb1\x9a\xa1\x4b\x13\x51\x38\xb2\xd9\x55\x57"\
    b"\xb6\x4f\xc2\xc4\x63\x28\x63\x64\x20\x81\x02\x8e\x19\xef\x9d\xff"\
    b"\xfa\xd4\xbc\xd8",
    "z-cpma-pak152.pk3"
)

pk3_checksum_table = {
    "baseq3" : {
        "cgame": baseq3_pak8_pack,
        "ui":    baseq3_pak8_pack
    },
    "osp" : {
        "cgame": osp_pak3_pack,
        "ui":    osp_pak1_pack
    },
    "cpma" : {
        "cgame": cpma_pak152_pack,
        "ui": cpma_pak152_pack
    },
}

def calculate_checksum(mode, vm, feed):
    try:
        table = pk3_checksum_table[mode][vm]
    except:
        table = pk3_checksum_table["baseq3"][vm]
    
    data = int_to_bytes(feed) + table[1]
    hash = bytes.fromhex( hashlib.new('md4', data).hexdigest() )
    
    return int.from_bytes(hash[0:4], "little", signed=True) \
         ^ int.from_bytes(hash[4:8], "little", signed=True) \
         ^ int.from_bytes(hash[8:12], "little", signed=True) \
         ^ int.from_bytes(hash[12:16], "little", signed=True)
